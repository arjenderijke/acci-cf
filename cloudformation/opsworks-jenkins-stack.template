{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "test with opsworks installing jenkins",

  "Parameters" : {
    "BucketName" : {
      "Description" : "The EC2 Bucket",
      "Type" : "String"
    },

    "SecretsFileName" : {
      "Description" : "The name of the file containing Jenkins account settings",
      "Type" : "String",
      "Default" : "secrets.json"
    },

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "CookBookFile": {
      "Description" : "Name of the tarball that contains the cookbook",
      "Type": "String",
      "ConstraintDescription" : "must be the name tar.gz file that contains a chef cookbook"
    },

    "ReplyToAddress": {
      "Description" : "Reply to email address in jenkins mailer plugin",
      "Type": "String",
      "Default": "unknown@example.com",
      "ConstraintDescription" : "Must be a valid email address"
    },

    "DomainName": {
      "Description" : "Domainname for email",
      "Type": "String",
      "Default": "example.com",
      "ConstraintDescription" : "Must be a domainname that you own"
    },

    "ServerAlias": {
      "Description" : "CNAME for the ELB pointing to the jenkins server",
      "Type": "String",
      "Default": "jenkins",
      "ConstraintDescription" : "must be a valid hostname"
    },

    "SSHLocation" : {
      "Description" : "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "InstanceType" : {
      "Description" : "Jenkins Server EC2 instance type",
      "Type" : "String",
      "Default" : "t2.small",
      "AllowedValues" : [ "t1.micro", "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "VpcId": {
      "Description" : "Name of default VPC id",
      "Type": "AWS::EC2::VPC::Id",
      "ConstraintDescription" : "must be the id of the default vpc."
    }

  },

  "Mappings" : {
    "RegionMap" : {
      "us-east-1"      : { "smtp" : "email-smtp.us-east-1.amazonaws.com"},
      "us-west-2"      : { "smtp" : "email-smtp.us-west-2.amazonaws.com"},
      "us-west-1"      : { "smtp" : "email-smtp.us-east-1.amazonaws.com"},
      "eu-west-1"      : { "smtp" : "email-smtp.eu-west-1.amazonaws.com"},
      "eu-central-1"   : { "smtp" : "email-smtp.eu-west-1.amazonaws.com"},
      "ap-southeast-1" : { "smtp" : "email-smtp.us-east-1.amazonaws.com"},
      "ap-northeast-1" : { "smtp" : "email-smtp.us-east-1.amazonaws.com"},
      "ap-southeast-2" : { "smtp" : "email-smtp.us-east-1.amazonaws.com"},
      "ap-northeast-2" : { "smtp" : "email-smtp.us-east-1.amazonaws.com"},
      "sa-east-1"      : { "smtp" : "email-smtp.us-east-1.amazonaws.com"}
    }
  },

  "Resources": {
    "JenkinsStack": {
      "Type": "AWS::OpsWorks::Stack",
      "Properties": {
        "DefaultAvailabilityZone": "eu-central-1a",
        "DefaultInstanceProfileArn": { "Fn::Join" : ["", [
          "arn:aws:iam::",
          { "Ref" : "AWS::AccountId" },
          ":instance-profile/aws-opsworks-ec2-role" ]] },
        "DefaultSshKeyName": { "Ref" : "KeyName" },
        "DefaultOs": "Amazon Linux 2015.09",
        "Name": "JenkinsStack",
        "HostnameTheme": "Layer_Dependent",
        "ServiceRoleArn": { "Fn::Join" : ["", [
          "arn:aws:iam::",
          { "Ref" : "AWS::AccountId" },
          ":role/aws-opsworks-service-role" ]] },
        "CustomJson" : {
          "secretsfilename" : { "Ref" : "SecretsFileName" },
          "replytoaddress" : { "Ref" : "ReplyToAddress" },
          "domainname" : { "Ref" : "DomainName" },
	  "smtphostname" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "smtp"]}
        },
        "UseCustomCookbooks": "true",
        "CustomCookbooksSource" : {
          "Type" : "s3",
          "Url" : { "Fn::Join" : ["", ["https://s3.",
            { "Ref" : "AWS::Region" },
            ".amazonaws.com/",
            { "Ref": "BucketName" },
            "/",
            { "Ref": "CookBookFile" } ]]}
        },
        "UseOpsworksSecurityGroups": "true",
        "Attributes": {
          "Color": "rgb(45, 114, 184)"
        },
        "ConfigurationManager": {
          "Name": "Chef",
          "Version": "12"
        }
      }
    },
    "layerJenkinsServer": {
      "Type": "AWS::OpsWorks::Layer",
      "Properties": {
        "AutoAssignElasticIps": "false",
        "AutoAssignPublicIps": "true",
        "EnableAutoHealing": "true",
        "Name": "Jenkins Server",
        "Shortname": "jenkinsserver",
        "Type": "custom",
        "StackId": {
          "Ref": "JenkinsStack"
        },
        "CustomRecipes": {
          "Configure": [
            "aws_chef_jenkins::JenkinsServer"
          ],
          "Deploy": [
            "aws_chef_jenkins::JenkinsServer"
          ],
          "Setup": [
            "aws_chef_jenkins::JenkinsServer"
          ]
        },
        "CustomSecurityGroupIds" : [
          { "Fn::GetAtt" : [ "JenkinsServerSecurityGroup", "GroupId" ]}
        ]
      },
      "DependsOn": [
        "layerJenkinsSlave"
      ]
    },
    "layerJenkinsSlave": {
      "Type": "AWS::OpsWorks::Layer",
      "Properties": {
        "AutoAssignElasticIps": "false",
        "AutoAssignPublicIps": "true",
        "EnableAutoHealing": "true",
        "Name": "Jenkins Slave",
        "Shortname": "jenkinsslave",
        "Type": "custom",
        "StackId": {
          "Ref": "JenkinsStack"
        },
        "CustomRecipes": {
          "Configure": [
            "aws_chef_jenkins::JenkinsSlave"
          ],
          "Deploy": [
            "aws_chef_jenkins::JenkinsSlave"
          ],
          "Setup": [
            "aws_chef_jenkins::JenkinsSlave"
          ]
        }
      }
    },
    "JenkinsInstance": {
      "Type": "AWS::OpsWorks::Instance",
      "Properties": {
        "Architecture": "x86_64",
        "AvailabilityZone": "eu-central-1a",
        "InstallUpdatesOnBoot": "true",
        "InstanceType": { "Ref" : "InstanceType" },
        "Os": "Amazon Linux 2015.09",
        "RootDeviceType": "ebs",
        "StackId": {
          "Ref": "JenkinsStack"
        },
        "LayerIds": [
          {
            "Ref": "layerJenkinsServer"
          }
        ]
      }
    },
    "JenkinsAmznSlaveInstance": {
      "Type": "AWS::OpsWorks::Instance",
      "Properties": {
        "Architecture": "x86_64",
        "AvailabilityZone": "eu-central-1a",
        "InstallUpdatesOnBoot": "true",
        "InstanceType": { "Ref" : "InstanceType" },
        "Os": "Amazon Linux 2015.09",
        "RootDeviceType": "ebs",
        "StackId": {
          "Ref": "JenkinsStack"
        },
        "LayerIds": [
          {
            "Ref": "layerJenkinsSlave"
          }
        ]
      }
    },
    "JenkinsUbuntuSlaveInstance": {
      "Type": "AWS::OpsWorks::Instance",
      "Properties": {
        "Architecture": "x86_64",
        "AvailabilityZone": "eu-central-1a",
        "InstallUpdatesOnBoot": "true",
        "InstanceType": { "Ref" : "InstanceType" },
        "Os": "Ubuntu 14.04 LTS",
        "RootDeviceType": "ebs",
        "StackId": {
          "Ref": "JenkinsStack"
        },
        "LayerIds": [
          {
            "Ref": "layerJenkinsSlave"
          }
        ]
      },
      "DependsOn": [
        "JenkinsAmznSlaveInstance"
      ]
    },

    "ELB": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "CrossZone" : "true",
        "SecurityGroups": [ { "Ref": "ELBSecurityGroup" } ],
        "AvailabilityZones": { "Fn::GetAZs" : "" },
        "Listeners": [ {
          "LoadBalancerPort": "80",
          "InstancePort": "8080",
          "Protocol": "HTTP"
        } ],
        "HealthCheck": {
          "Target": "HTTP:8080/",
          "HealthyThreshold": "3",
          "UnhealthyThreshold": "5",
          "Interval": "90",
          "Timeout": "60"
        }
      }
    },

    "ELBAttachment": {
      "Type": "AWS::OpsWorks::ElasticLoadBalancerAttachment",
      "Properties": {
        "ElasticLoadBalancerName": { "Ref": "ELB" },
        "LayerId": { "Ref": "layerJenkinsServer" }
      }
    },

    "s3policyjenkinschef": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "BucketName"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "AddPerm",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "BucketName"
                    },
                    "/*"
                  ]
                ]
              }
            }
          ]
        }
      }
    },

    "JenkinsServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription" : "Allow inbound requests from the ELB to the OpsWorks instances",
        "SecurityGroupIngress": [
          { "IpProtocol": "tcp",
	    "FromPort": "8080",
	    "ToPort": "8080",
	    "SourceSecurityGroupId": { "Ref": "ELBSecurityGroup" } }
        ]
      }
    },

    "ELBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription" : "Allow inbound access to the ELB",
	"VpcId": { "Ref" : "VpcId" },
        "SecurityGroupIngress": [ {
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "CidrIp": { "Ref" : "SSHLocation"}
        } ],
        "SecurityGroupEgress": [ {
          "IpProtocol": "tcp",
          "FromPort": "8080",
          "ToPort": "8080",
          "CidrIp": "0.0.0.0/0"
        } ]
      }
    },

    "ElbCname" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
         "HostedZoneName" : {
            "Fn::Join" : [ "", [
               { "Ref" : "DomainName" }, "."
            ] ]
         },
         "Comment" : "CNAME for ELB instance.",
         "Name" : {
            "Fn::Join" : [ "", [
               {"Ref" : "ServerAlias" }, ".",
               {"Ref" : "DomainName" } ,"."
            ] ]
         },
         "Type" : "CNAME",
         "TTL" : "900",
         "ResourceRecords" : [
            { "Fn::GetAtt" : [ "ELB", "DNSName" ] }
         ]
      }
    }
  },

  "Outputs": {
    "StackId": {
      "Description": "Stack Id of newly created OpsWorks stack",
      "Value": { "Ref": "JenkinsStack" }
    },
    "URL": {
      "Description" : "URL for newly created application",
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "ELB", "DNSName" ]}]] }
    }
  }
}
